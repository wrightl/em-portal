name: Main deployment workflow

on:
    workflow_call:
        inputs:
            AZURE_ENV_NAME:
                required: true
                type: string
            AZURE_CLIENT_ID:
                required: true
                type: string
            AZURE_TENANT_ID:
                required: true
                type: string
            AZURE_SUBSCRIPTION_ID:
                required: true
                type: string
            AUTH0_DOMAIN:
                required: true
                type: string
            AUTH0_CLIENTID:
                required: true
                type: string
        secrets:
            AZURE_CREDENTIALS:
                required: true

jobs:
    build:
        runs-on: ubuntu-latest
        env:
            AZURE_ENV_NAME: ${{ inputs.AZURE_ENV_NAME }}
            AZURE_CLIENT_ID: ${{ inputs.AZURE_CLIENT_ID }}
            AZURE_TENANT_ID: ${{ inputs.AZURE_TENANT_ID }}
            AZURE_SUBSCRIPTION_ID: ${{ inputs.AZURE_SUBSCRIPTION_ID }}
            AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
            AUTH0_DOMAIN: ${{ inputs.AUTH0_DOMAIN }}
            AUTH0_CLIENTID: ${{ inputs.AUTH0_CLIENTID }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4.1.1

            - name: Install azd
              uses: Azure/setup-azd@v0.1.0

            - name: Log in with Azure (Federated Credentials)
              if: ${{ env.AZURE_CLIENT_ID != '' }}
              run: |
                  azd auth login `
                    --client-id "$Env:AZURE_CLIENT_ID" `
                    --federated-credential-provider "github" `
                    --tenant-id "$Env:AZURE_TENANT_ID"
              shell: pwsh

            - name: Log in with Azure (Client Credentials)
              if: ${{ env.AZURE_CREDENTIALS != '' }}
              run: |
                  $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
                  Write-Host "::add-mask::$($info.clientSecret)"

                  azd auth login `
                    --client-id "$($info.clientId)" `
                    --client-secret "$($info.clientSecret)" `
                    --tenant-id "$($info.tenantId)"
              shell: pwsh
              env:
                  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

            - name: Install aspire workload
              run: |
                  dotnet workload install aspire
              shell: pwsh

            - name: Provision Infrastructure
              run: azd provision --no-prompt
              env:
                  AZURE_ENV_NAME: ${{ env.AZURE_ENV_NAME }}
                  AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
                  AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
                  AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
                  AUTH0_CLIENTID: ${{ vars.AUTH0_CLIENTID }}

            - name: Deploy Application
              run: azd deploy --no-prompt --debug
              env:
                  AZURE_ENV_NAME: ${{ env.AZURE_ENV_NAME }}
                  AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
                  AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
                  AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
                  AUTH0_CLIENTID: ${{ vars.AUTH0_CLIENTID }}